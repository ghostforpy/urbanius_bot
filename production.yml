version: '3'

volumes:
  production_traefik: {}
  production_nginx_media: {}
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: urbanius_bot_production_traefik
    # network_mode: host
    volumes:
      - production_traefik:/etc/traefik/acme:z
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    restart: unless-stopped

  nginx-media:
    image: "nginx:latest"
    ports:
      - "8000:80"
    volumes:
      - production_nginx_media:/usr/share/nginx/html/media:ro
    restart: unless-stopped

  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: urbanius_bot_production_django
    volumes:
      - production_nginx_media:/app/media:z
    depends_on:
    #   # - pgbouncer
      - postgres
    #   - redis
    env_file:
      - .env
      # - ./.envs/.production/.django
      # - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: urbanius_bot_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - .env
      # - ./.envs/.production/.postgres