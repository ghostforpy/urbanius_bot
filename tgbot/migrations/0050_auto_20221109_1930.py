# Generated by Django 4.0.6 on 2022-11-09 16:30

from django.db import migrations

def create_business_branches(apps, schema_editor):
    BusinessBranches = apps.get_model('tgbot', 'BusinessBranches')
    BusinessBranches.objects.all().delete()
    branches = list()
    BRANCHES = [
        "Цифровизация городского хозяйства",
        "IT Технологии",
        "IT Технологии в строительстве",
        "Девелопмент",
        "Коммерческая недвижимость",
        "Жилая недвижимость",
        "Проектные организации",
        "Строительно-монтажные организации",
        "Инжиниринговые компании",
        "Поставщики строительных материалов",
        "Строительное оборудование и спецтехника",
        "HR в области строительства",
        "Оценка и экспертная деятельность",
        "СТУ",
        "Металлургия",
        "Финансовый сектор",
        "Сектор юридических услуг",
        "Кадастровые и геодезические услуги",
        "Благоустройство и ландшафтный дизайн",
    ]

    for branch in BRANCHES:
        branches.append(
            BusinessBranches(title=branch)
        )
    BusinessBranches.objects.bulk_create(branches)

def create_business_needs(apps, schema_editor):
    BusinessNeeds = apps.get_model('tgbot', 'BusinessNeeds')
    BusinessNeeds.objects.all().delete()
    needs = list()
    NEEDS = [
        "Взаимодействие с властью",
        "Поиск поставщиков и подрядчиков",
        "Поиск клиентов и заказчиков",
        "Участие в тендерах и электронных торгах",
        "Подбор квалифицированных кадров"
    ]

    for need in NEEDS:
        needs.append(
            BusinessNeeds(title=need)
        )
    BusinessNeeds.objects.bulk_create(needs)

def create_business_benefits(apps, schema_editor):
    BusinessBenefits = apps.get_model('tgbot', 'BusinessBenefits')
    BusinessBenefits.objects.all().delete()
    benefits = list()
    BENEFITS = [
        "Делиться связями и компетенциями",
        "Консультировать участников сообщества",
        "Быть автором экспертных комментариев",
        "Предоставлять актуальную аналитику",
    ]

    for benefit in BENEFITS:
        benefits.append(
            BusinessBenefits(title=benefit)
        )
    BusinessBenefits.objects.bulk_create(benefits)

class Migration(migrations.Migration):

    dependencies = [
        ('tgbot', '0049_newuser_business_branches_user_business_branches'),
    ]

    operations = [
        migrations.RunPython(create_business_branches),
        migrations.RunPython(create_business_needs),
        migrations.RunPython(create_business_benefits),
    ]
